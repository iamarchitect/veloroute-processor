<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byType">

	<bean id="sqlDumper" class="app.velor.SqlDumper">
		<property name="locations">
			<list>
				<value>properties/config.properties</value>
				<value>properties/create-statements.xml</value>
				<value>properties/preprocess-statements.xml</value>
			</list>
		</property>
	</bean>

	<bean id="jsonDownloader" class="app.velor.json.JsonDownloader">
		<property name="jsonurls" value="${veloroute_remote_jsons_url}"></property>
		<property name="mediaUrl" value="${veloroute_remote_media_url}"></property>
		<property name="jsons" value="${veloroute_remote_jsons}"></property>
	</bean>

	<bean class="app.velor.VelorProcessor">
		<property name="parser" ref="jsonParser"></property>
		<property name="routePreprocessor" ref="routePreprocessor"></property>
		<property name="downloader" ref="jsonDownloader"></property>
		<property name="sqlDumper" ref="sqlDumper"></property>
	</bean>


	<bean id="dummyContext" class="android.content.Context"></bean>

	<bean id="jsonParserBase" class="app.velor.json.DefaultJsonParser"
		abstract="true">
		<constructor-arg index="0" ref="databaseManager"></constructor-arg>
	</bean>

	<bean id="database" class="android.database.sqlite.SQLiteDatabase">
	</bean>


	<bean id="routePreprocessor" class="app.velor.RoutePreprocessor">
		<property name="routeMerger">
			<bean class="app.velor.RouteMerger">
				<property name="databaseManager" ref="databaseManager"></property>
				<property name="deleteMergedSql" value="${delete_merged_routes_sql}"></property>
				<property name="routedataTable" value="${table_routedata}"></property>
				<property name="selectIntersectionsSql" value="${select_connected_with_same_typeid_sql}"></property>
				<property name="updateMergedLengthSql" value="${update_routes_increment_length_sql}"></property>
				<property name="updateMergedSql" value="${update_merged_route_data_sql}"></property>
			</bean>
		</property>

		<property name="routeReducer">
			<bean class="app.velor.RouteReducer">
				<property name="databaseManager" ref="databaseManager"></property>
				<property name="routedataTable" value="${table_routedata}"></property>
				<property name="routesTable" value="${table_routes}"></property>
			</bean>
		</property>

		<property name="routeInterconnectionBuilder">
			<bean class="app.velor.RouteInterconnectionBuilder">
				<property name="databaseManager" ref="databaseManager"></property>
				<property name="edgeCreationSqls">
					<array>
						<value>${insert_edges_sql}</value>
						<value>${insert_reversed_edges_sql}</value>
						<value>${insert_inetersections_sql}</value>
					</array>
				</property>
				<property name="edgesTable" value="${table_edges}"></property>
				<property name="routedataTable" value="${table_routedata}"></property>
				<property name="selectEdgesSql" value="${select_edges_sql}"></property>
			</bean>
		</property>
	</bean>

	<bean id="databaseManager" class="app.velor.DatabaseManager">
		<property name="database" ref="database"></property>
		<property name="dropTableSql">
			<array>
				<value>DROP TABLE IF EXISTS ${table_cities};</value>
				<value>DROP TABLE IF EXISTS ${table_categories};</value>
				<value>DROP TABLE IF EXISTS ${table_types};</value>
				<value>DROP TABLE IF EXISTS ${table_pois};</value>
				<value>DROP TABLE IF EXISTS ${table_routesections};</value>
				<value>DROP TABLE IF EXISTS ${table_routes};</value>
				<value>DROP TABLE IF EXISTS ${table_routedata};</value>
				<value>DROP VIEW IF EXISTS ${view_intersections};</value>
				<value>DROP TABLE IF EXISTS ${table_edges};</value>
				<value>DROP TABLE IF EXISTS ${table_tiles};</value>
			</array>
		</property>
		<property name="createSql">
			<array>
				<value>${create_city_sql}</value>
				<value>${create_poi_type_category_sql}</value>
				<value>${create_poi_types_sql}</value>
				<value>${create_pois_sql}</value>
				<value>${create_route_sections_sql}</value>
				<value>${create_routes_sql}</value>
				<value>${create_route_data_sql}</value>
				<value>${create_intersections_sql}</value>
				<value>${create_edges_sql}</value>
				<value>${create_tiles_sql}</value>
			</array>
		</property>
	</bean>


	<bean id="mapperFactory" class="app.velor.json.JsonMapperFactory">
	</bean>

	<bean id="defaultMapper" scope="prototype" factory-bean="mapperFactory"
		factory-method="getMapper"></bean>


	<bean id="poisMapper" factory-bean="mapperFactory" factory-method="getMapper">
		<constructor-arg index="0"
			value="${json_helper_dir}${json_pois}${json_helper_extension}"></constructor-arg>
		<constructor-arg index="1">
			<bean class="app.velor.json.impl.PoiMapperHelper">
				<constructor-arg value="${veloroute_remote_media_url}"></constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="typesMapper" factory-bean="mapperFactory"
		factory-method="getMapper">
		<constructor-arg index="0"
			value="${json_helper_dir}${json_types}${json_helper_extension}"></constructor-arg>
		<constructor-arg index="1">
			<bean class="app.velor.json.impl.PoiTypeMapperHelper">
				<constructor-arg value="${veloroute_remote_media_url}"></constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="routeSectionsMapper" factory-bean="mapperFactory"
		factory-method="getMapper">
		<constructor-arg index="0">
			<null />
		</constructor-arg>
		<constructor-arg index="1">
			<bean class="app.velor.json.impl.RouteSectionsMapperHelper"></bean>
		</constructor-arg>
	</bean>

	<bean id="jsonParser" class="app.velor.json.JsonParserHandler">
		<property name="parsers">
			<map key-type="java.lang.String" value-type="app.velor.JSONParser">
				<entry key="${json_cities}">
					<bean parent="jsonParserBase">
						<constructor-arg index="1" ref="defaultMapper"></constructor-arg>
						<constructor-arg index="2" value="${table_cities}"></constructor-arg>
					</bean>
				</entry>
				<entry key="${json_categories}">
					<bean parent="jsonParserBase">
						<constructor-arg index="1" ref="defaultMapper"></constructor-arg>
						<constructor-arg index="2" value="${table_categories}"></constructor-arg>
					</bean>
				</entry>
				<entry key="${json_types}">
					<bean parent="jsonParserBase">
						<constructor-arg index="1" ref="typesMapper"></constructor-arg>
						<constructor-arg index="2" value="${table_types}"></constructor-arg>
					</bean>
				</entry>
				<entry key="${json_pois}">
					<bean parent="jsonParserBase">
						<constructor-arg index="1" ref="poisMapper"></constructor-arg>
						<constructor-arg index="2" value="${table_pois}"></constructor-arg>
					</bean>
				</entry>
				<entry key="${json_routesections}">
					<bean parent="jsonParserBase">
						<constructor-arg index="1" ref="routeSectionsMapper"></constructor-arg>
						<constructor-arg index="2" value="${table_routesections}"></constructor-arg>
					</bean>
				</entry>
				<entry key="${json_routes}">
					<bean parent="jsonParserBase" class="app.velor.json.impl.RouteJsonParser">
						<property name="routeDataTable" value="${table_routedata}"></property>
						<property name="routesTable" value="${table_routes}"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
</beans>


